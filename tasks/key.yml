---

- name: Assertions
  ansible.builtin.assert:
    that:
      - gpg_user_name is defined and gpg_user_name | length > 0
      - gpg_user_realname is defined and gpg_user_realname | length > 0
      - gpg_user_comment is defined and gpg_user_comment | length > 0
      - gpg_user_email is defined and gpg_user_email | length > 0

- name: Define gpg_home location
  when: gpg_home is undefined
  block:

    - name: Get home-directory for {{ gpg_user_name }}
      ansible.builtin.set_fact:
        gpg_home: "{{ ('~' + gpg_user_name) | expanduser }}/.gnupg"

    - name: Fail if none is found
      ansible.builtin.fail:
        msg: "Unable to find home-directory for '{{ gpg_user_name }}'"
      when: gpg_home is search('^~')

- name: Create GPG directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    # owner: "{{ gpg_user_name }}"
    # group: "{{ gpg_user_name }}"
    mode: "0700"
  become: yes
  become_user: "{{ gpg_user_name }}"
  loop:
    - "{{ gpg_home }}"
    - "{{ gpg_home }}/private-keys-v1.d"

- name: Get all GPG keys
  ansible.builtin.command: gpg --list-keys
  changed_when: false
  become: yes
  become_user: "{{ gpg_user_name }}"
  register: _gpg_keys
  environment:
    GNUPGHOME: "{{ gpg_home }}"

- name: Create GPG key
  become: yes
  become_user: "{{ gpg_user_name }}"
  when:
    - gpg_user_key is undefined
    - gpg_user_email not in _gpg_keys.stdout
  environment:
    GNUPGHOME: "{{ gpg_home }}"
  block:

    - name: Create GPG input file
      ansible.builtin.template:
        src: templates/key-input.j2
        dest: "{{ gpg_home }}/.key.input"
        mode: "0600"

    - name: Create GPG key
      ansible.builtin.command:
        # cmd: gpg --batch --generate-key {{ gpg_home }}/.key.input
        cmd: gpg --batch --gen-key {{ gpg_home }}/.key.input
      changed_when: yes

    - name: Delete GPG input file
      ansible.builtin.file:
        path: "{{ gpg_home }}/.key.input"
        state: absent

- name: Import GPG key
  become: yes
  become_user: "{{ gpg_user_name }}"
  when:
    - gpg_user_key is defined
    - gpg_user_email not in _gpg_keys.stdout
  environment:
    GNUPGHOME: "{{ gpg_home }}"
  block:

    - name: Copy key pair
      ansible.builtin.copy:
        src: "{{ gpg_user_key }}.sec"
        dest: "{{ gpg_home }}/{{ item }}"
        mode: "0600"
      loop:
        - "{{ gpg_user_key }}.sec"
        - "{{ gpg_user_key }}.pub"

    - name: Retrieve signature from key  # noqa no-free-form
      ansible.builtin.shell: |
        set -o pipefail
        gpg --show-keys --with-colons {{ gpg_home }}/{{ gpg_user_key }}.sec | \
          awk -F: '$1=="fpr" {print $10}' | head -1
      args:
        executable: /bin/bash
      changed_when: false
      register: __gpg_signature

    - name: Import GPG keypair
      ansible.builtin.command:
        cmd: gpg --batch --import {{ gpg_home }}/{{ item }}
      changed_when: yes
      loop:
        - "{{ gpg_user_key }}.sec"
        - "{{ gpg_user_key }}.pub"
      # when: gpg_user_email not in _gpg_keys.stdout
      when: __gpg_signature.stdout not in _gpg_keys.stdout

- name: Retrieve trust level  # noqa no-free-form
  ansible.builtin.shell: |
    set -o pipefail
    key=`gpg --list-keys --with-colons {{ gpg_user_email }} | awk -F: '/pub:/ {print $5}'`
    trustlevel=`gpg --export-ownertrust | grep $key | awk -F: '{print $2}'`
    echo $trustlevel
    [[ $trustlevel -eq 6 ]] && exit 0 || exit 1
  args:
    executable: /bin/bash
  failed_when: false
  changed_when: false
  register: _gpg_trust
  become: yes
  become_user: "{{ gpg_user_name }}"
  environment:
    GNUPGHOME: "{{ gpg_home }}"

- name: Show current trust level
  ansible.builtin.debug:
    msg: "Trust level : {{ _gpg_trust.stdout }}"

- name: Trust GPG key ultimately  # noqa no-free-form
  ansible.builtin.shell: |
    set -o pipefail
    echo -e "5\ny\n" | gpg --batch --command-fd 0 --expert --edit-key {{ gpg_user_email }} trust
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ gpg_user_name }}"
  changed_when: true
  environment:
    GNUPGHOME: "{{ gpg_home }}"
  when: _gpg_trust.rc != 0
